292-nim_game
############

:date: 2016-2-22 20:42
:tags: Memoization
:category: LeetCode
:slug: 292-nim_game

`LeetCode Problem Link <https://leetcode.com/problems/word-pattern-ii/>`_

The person removing the last stone wins.

At each round, a person removes 1, 2, or 3 stones. You will take the first turn.

I am thinking to use memoization.

.. code-block:: java

    public boolean canWinNim(int n) {
        if (n < 1)
            return false;
        else if (n <= 3)
            return true;

        boolean[] canWinWithIStones = new boolean[n+1];

        canWinWithIStones[1] = true;
        canWinWithIStones[2] = true;
        canWinWithIStones[3] = true;

        for (int i=4; i<= n; i++) {

            // with (i-1) stones left, (i-2) stones left, (i-3) stones left
            // will play B win?
            if (canWinWithIStones[i-1] && canWinWithIStones[i-2] && canWinWithIStones[i-3]) {
                // I take 1, or 2, or 3 Player B is going to win
                canWinWithIStones[i] = false;
            }
            else {
                canWinWithIStones[i] = true;
            }
        }

        return canWinWithIStones[n];
    }

But I got MLE

::

    Submission Result: Memory Limit Exceeded
    Last executed input:
    1348820612

Okay so we don't really need to record the result for all n. But we do need to know the results to n-1, n-2, and n-3,
i.e., the previous 3 results.

.. code-block:: java

    public boolean canWinNim(int n) {

        if (n < 1)
            return false;
        else if (n <= 3)
            return true;

        boolean prev3 = true;
        boolean prev2 = true;
        boolean prev1 = true;

        boolean cur = false;

        for (int i=4; i<=n; i++) {

            if  (prev1 && prev2 && prev3) {
                cur = false;
            }
            else {
                cur = true;
            }

            prev3 = prev2;
            prev2 = prev1;
            prev1 = cur;

        }

        return prev1;
    }

Guess what?

::

    Submission Result: Memory Limit Exceeded
    Last executed input:
    1348820612

Well well well, if you print the array from approach # 1 you will see a pattern.
(Hint: use ``%``)