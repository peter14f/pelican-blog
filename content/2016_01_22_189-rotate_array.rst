189-rotate_array
################

:date: 2016-1-22 17:40
:tags:
:category: LeetCode
:slug: 189-rotate_array

`LeetCode Problem Link <https://leetcode.com/problems/rotate-array/>`_

The O(n) space solution is quite straightforward.

.. code-block:: java

    public void rotate(int[] nums, int k) {
        int n = nums.length;
        int[] newNums = new int[n];

        for (int i=0; i<n; i++) {
            int from = i-k;

            while (from < 0)
                from += n;

            newNums[i] = nums[from];
        }

        for (int i=0; i<n; i++) {
            nums[i] = newNums[i];
        }
    }

How can we solve this problem in-place?

The problem is tagged as related to 186-reverse_words_in_a_string_ii. This kind of gives away
the trick. We can reverse the whole array first, and then rotate two different parts of the
array.

.. code-block:: java

    public void rotate(int[] nums, int k) {
        int n = nums.length;

        if (k > n)
            k = k%n;

        if (k==0)
            return;

        int l = 0;
        int r = n-1;

        while (r > l) {
            int tmp = nums[r];
            nums[r] = nums[l];
            nums[l] = tmp;

            r--;
            l++;
        }

        rotate(nums, 0, k-1);
        rotate(nums, k, n-1);
    }

    private void rotate(int[] nums, int low, int high) {
        while (high > low) {
            int tmp = nums[high];
            nums[high] = nums[low];
            nums[low] = tmp;

            high--;
            low++;
        }
    }